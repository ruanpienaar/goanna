{erl_opts,
	[native, {hipe, o3}, debug_info, fail_on_warning, warnings_as_errors, {d, 'VSN'}]
}.
{deps, [
  {unit_testing,
      {git, "https://github.com/ruanpienaar/unit_testing", {branch, "master"}}},
  {eper, ".*",
      {git, "https://github.com/ruanpienaar/eper", {branch,"master"}}},
  {hawk, ".*",
      {git, "https://github.com/ruanpienaar/hawk", {branch,"master"}}},
  {coveralls,
      {git, "https://github.com/markusn/coveralls-erl", {branch, "master"}}}
]}.

{require_otp_vsn, "17.*|18.*|19.*|20.*"}.
{edoc_opts, [{doclet, edown_doclet}]}.
{eunit_opts, [
	{report,{eunit_surefire,[{dir,"."}]}},
	{report, {eunit_progress, [colored, profile]}}
]}.
{eunit_compile_opts, [{i, "../"}]}.
{escript_main_app, 'goanna'}.
{escript_name, 'goanna'}.
{escript_incl_apps, [hawk]}.
{escript_emu_args, "%%! -smp enable +A 1 +K true -config sys.config -pa ebin -pa deps/*/ebin -setcookie goanna -proto_dist hawk_tcp -hidden\n"}.

{plugins, [
    {coveralls, {git, "https://github.com/markusn/coveralls-erl", "master"}},
    rebar3_proper
]}.

{cover_enabled, true}.
{cover_export_enabled, true}.
{coveralls_coverdata, "_build/test/cover/eunit.coverdata"}. % or a list of files
{coveralls_service_name , "travis-ci"}.

{profiles,
    [{test, [
        {deps, [{proper, "1.2.0"}, recon]}
        ]}
    ]
}.

%% == Dialyzer ==

{dialyzer, [
    {warnings, [
        % underspecs, no_return
        no_return
        ,no_unused
        ,no_improper_lists
        ,no_fun_app
        ,no_match
        ,no_opaque
        ,no_fail_call
        ,no_contracts
        ,no_behaviours
        ,no_undefined_callbacks
        ,unmatched_returns
        ,error_handling
        ,race_conditions
        % ,overspecs
        % ,underspecs
        ,specdiffs
    ]},
    {get_warnings, true},
    {plt_apps, all_deps}, % top_level_deps | all_deps
    {plt_extra_apps, [goanna]},
    {plt_location, local}, % local | "/my/file/name"
    {plt_prefix, "rebar3"},
    {base_plt_apps, [kernel, stdlib]},
    {base_plt_location, global}, % global | "/my/file/name"
    {base_plt_prefix, "rebar3"}
]}.

%% == xref ==

{xref_warnings, true}.

%% optional extra paths to include in xref:set_library_path/2.
%% specified relative location of rebar.config.
%% e.g. {xref_extra_paths,["../gtknode/src"]}
%% {xref_extra_paths,[]}.

%% xref checks to run
{xref_checks, [ undefined_function_calls,
                undefined_functions,
                locals_not_used,
                % exports_not_used,
                deprecated_function_calls,
                deprecated_functions
              ]}.

%% Optional custom xref queries (xref manual has details) specified as
%%     {xref_queries, [{query_string(), expected_query_result()},...]}
%% The following for example removes all references to mod:*foo/4
%% functions from undefined external function calls as those are in a
%% generated module
%%{xref_queries,
%% [{"(XC - UC) || (XU - X - B"
%%   " - (\"mod\":\".*foo\"/\"4\"))",[]}]}.